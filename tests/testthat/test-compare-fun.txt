> # equal
> f1 <- (function(x = 1, y = 2) { })
> f2 <- (function(x = 1, y = 2) { })
> compare(f1, f2)
v No differences

> f2 <- source(test_path("f2.R"), local = TRUE, keep.source = TRUE)$value
> compare(f1, f2)
v No differences

> # pritimives
> compare(`[`, sum)
`x` is `.Primitive("sum")`
`y` is `.Primitive("[")`

> compare(sum, prod)
`x` is `.Primitive("prod")`
`y` is `.Primitive("sum")`

> # diff formals
> f3 <- (function(x = 1, y = 1, z = 1) { })
> compare(f1, f3)
`formals(x)$y`: 2/1

`formals(x)$z` is a double vector (1)
`formals(y)$z` is absent

`names(formals(x))`: 'x' 'y' +'z'

> # diff body
> f4 <- (function(x = 1, y = 2) {
+   x + y
+ })
> compare(f1, f4)
`body(x)`: '{' +'    x + y' '}'

> compare(f1, f4, ignore_srcref = FALSE)
`body(x)`: '{' +'    x + y' '}'

`attr(body(x), 'srcref')[[2]]` is an integer vector (15, 3, 15, 7, 3, ...)
`attr(body(y), 'srcref')[[2]]` is absent

`attr(body(x), 'wholeSrcref')`: 1 0 2/16 33/1 0 -33 1 2/1 2/16

`attr(x, 'srcref')`: 2/14 8 2/16 33/1 8 33/1 2/14 2/16

> # diff environment
> environment(f1) <- base_env()
> environment(f2) <- global_env()
> compare(f1, f2)
`environment(x)` is <env:global>
`environment(y)` is <env:package:base>`

